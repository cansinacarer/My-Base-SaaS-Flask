name: Build & Deploy

on:
    workflow_run:
        workflows:
            - Run Tests # Name of the test workflow in test.yml
        types:
            - completed

jobs:
    apply-database-migrations:
        # Ensure tests passed
        if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main' }}
        runs-on: ubuntu-latest
        environment: Demo

        steps:
            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: pip install -r requirements.txt

            - name: Apply database migrations
              env:
                  DATABASE_CONNECTION_STRING: ${{ secrets.DATABASE_CONNECTION_STRING }}
                  APP_NAME: Base SaaS
                  TIMEZONE: US/Eastern
                  FLASK_DEBUG: True
                  DATABASE_SECRET_KEY: 12345678901234567
                  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
                  S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
                  S3_KEY: ${{ secrets.S3_KEY }}
                  S3_SECRET: ${{ secrets.S3_SECRET }}
                  MAIL_FROM: webmaster@cansin.net
                  MAIL_SERVER: smtp.yandex.com
                  MAIL_PORT: 465
                  MAIL_USE_TLS: False
                  MAIL_USE_SSL: True
                  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
                  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
                  MAIL_DEBUG: False
                  STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
                  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
                  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
                  STRIPE_PRODUCT_ID_FOR_CREDITS: ${{ secrets.STRIPE_PRODUCT_ID_FOR_CREDITS }}
                  STRIPE_CREDIT_UNIT_COST: ${{ secrets.STRIPE_CREDIT_UNIT_COST }}
                  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
                  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
                  RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
                  RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
                  FLASK_RUN_CERT: .devcontainer/ssl/cert.pem
                  FLASK_RUN_KEY: .devcontainer/ssl/key.pem
              run: flask db upgrade

    build-and-deploy:
        needs: apply-database-migrations
        # Ensure tests passed
        if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main' }}
        runs-on: ubuntu-latest
        environment: Demo

        steps:
            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install CapRover
              run: npm install -g caprover

            - name: Login w/ CapRover
              run: caprover login -u "${{ secrets.CAPROVER_SERVER }}" -p "${{ secrets.CAPROVER_PW }}" -n my_machine

            - name: Create tar file
              run: tar -cvf deploy.tar ./*

            # Try to deploy the app within 5 minutes, otherwise fail to avoid holding the queue
            - name: Deploy the tar file
              run: timeout 300 caprover deploy -n my_machine -a "${{ secrets.CAPROVER_APP_NAME }}" -t  ${{ github.workspace }}/deploy.tar -p "${{ secrets.CAPROVER_PW }}"
